name: CI/CD Pipeline

# This pipeline will run on pushes to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Maven Project # and Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Java Development Kit) environment for Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Step 4: Clean and build Maven project
      - name: Build with Maven
        run: mvn clean package --file pom.xml

  # docker:
  #   name: Build and Publish Docker Image
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Step 1: Checkout the code (again for this job)
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Step 2: Log in to Docker Hub (replace DOCKER_USERNAME and DOCKER_PASSWORD with GitHub secrets)
  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     # Step 3: Build Docker image
  #     - name: Build Docker image
  #       run: docker build -t ${{ secrets.DOCKER_USERNAME }}/your-backend-app:latest .

  #     # Step 4: Push Docker image to Docker Hub
  #     - name: Push Docker image
  #       run: docker push ${{ secrets.DOCKER_USERNAME }}/your-backend-app:latest
