name: Java CI with Maven

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up test environment variables
        run: |
          echo "APP_SECURITY_ADMIN_PASSWORD=TestAdmin123!" >> $GITHUB_ENV
          echo "APP_SECURITY_USER_PASSWORD=TestUser123!" >> $GITHUB_ENV  
          echo "APP_SECURITY_JWT_SECRET=TestJWTSecretKeyForGitHubActionsCI123456789!" >> $GITHUB_ENV
          
      - name: Run tests
        run: mvn -B test --file pom.xml
        env:
          APP_SECURITY_ADMIN_PASSWORD: ${{ env.APP_SECURITY_ADMIN_PASSWORD }}
          APP_SECURITY_USER_PASSWORD: ${{ env.APP_SECURITY_USER_PASSWORD }}
          APP_SECURITY_JWT_SECRET: ${{ env.APP_SECURITY_JWT_SECRET }}
          
      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    name: Build Application
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up build environment variables
        run: |
          echo "APP_SECURITY_ADMIN_PASSWORD=BuildAdmin123!" >> $GITHUB_ENV
          echo "APP_SECURITY_USER_PASSWORD=BuildUser123!" >> $GITHUB_ENV  
          echo "APP_SECURITY_JWT_SECRET=BuildJWTSecretKeyForGitHubActionsCI123456789!" >> $GITHUB_ENV
          
      - name: Build with Maven (skip tests)
        run: mvn -B package -DskipTests --file pom.xml
        env:
          APP_SECURITY_ADMIN_PASSWORD: ${{ env.APP_SECURITY_ADMIN_PASSWORD }}
          APP_SECURITY_USER_PASSWORD: ${{ env.APP_SECURITY_USER_PASSWORD }}
          APP_SECURITY_JWT_SECRET: ${{ env.APP_SECURITY_JWT_SECRET }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jar-artifacts
          path: target/*.jar
          retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    name: Security Scanning
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          
      - name: Set up security scan environment
        run: |
          echo "APP_SECURITY_ADMIN_PASSWORD=ScanAdmin123!" >> $GITHUB_ENV
          echo "APP_SECURITY_USER_PASSWORD=ScanUser123!" >> $GITHUB_ENV  
          echo "APP_SECURITY_JWT_SECRET=ScanJWTSecretKeyForGitHubActionsSecurity123456789!" >> $GITHUB_ENV
          
      - name: Run OWASP Dependency Check
        run: mvn -B org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7
        env:
          APP_SECURITY_ADMIN_PASSWORD: ${{ env.APP_SECURITY_ADMIN_PASSWORD }}
          APP_SECURITY_USER_PASSWORD: ${{ env.APP_SECURITY_USER_PASSWORD }}
          APP_SECURITY_JWT_SECRET: ${{ env.APP_SECURITY_JWT_SECRET }}
          
      - name: Upload OWASP Dependency Check results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html
          retention-days: 30
          
      - name: Run SpotBugs Security Analysis
        run: mvn -B compile spotbugs:check
        env:
          APP_SECURITY_ADMIN_PASSWORD: ${{ env.APP_SECURITY_ADMIN_PASSWORD }}
          APP_SECURITY_USER_PASSWORD: ${{ env.APP_SECURITY_USER_PASSWORD }}
          APP_SECURITY_JWT_SECRET: ${{ env.APP_SECURITY_JWT_SECRET }}
        continue-on-error: true
        
      - name: Upload SpotBugs results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: spotbugs-report
          path: target/spotbugsXml.xml
          retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: [test, build]
    name: Build and Push Docker Image
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/spring-rest-api
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
